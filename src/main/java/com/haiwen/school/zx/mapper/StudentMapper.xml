<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haiwen.school.zx.mapper.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.haiwen.school.zx.beans.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="stuName" property="stuname" jdbcType="VARCHAR" />
    <result column="stuphone" property="stuphone" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, stuName, stuphone, age, username, sex
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.haiwen.school.zx.beans.Student" >
    insert into student (id, stuName, stuphone, 
      age, username, sex)
    values (#{id,jdbcType=INTEGER}, #{stuname,jdbcType=VARCHAR}, #{stuphone,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.haiwen.school.zx.beans.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="stuname != null" >
        stuName,
      </if>
      <if test="stuphone != null" >
        stuphone,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="sex != null" >
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuname != null" >
        #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="stuphone != null" >
        #{stuphone,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.haiwen.school.zx.beans.Student" >
    update student
    <set >
      <if test="stuname != null" >
        stuName = #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="stuphone != null" >
        stuphone = #{stuphone,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.haiwen.school.zx.beans.Student" >
    update student
    set stuName = #{stuname,jdbcType=VARCHAR},
      stuphone = #{stuphone,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAll" resultType="Student" parameterType="java.util.Map">
    select * from student
    <where>
      <if test="stuname!=null and stuname!=''">
        and stuName like concat('%',concat(#{stuname,jdbcType=VARCHAR},'%'))
      </if>
      <if test="sex!=null and sex!=''">
        and sex = #{sex,jdbcType=VARCHAR}
      </if>
    </where>
  </select>

  <select id="getByUsername" resultType="Student" parameterType="java.lang.String">
    select * from student where username = #{username,jdbcType=VARCHAR}
  </select>


</mapper>